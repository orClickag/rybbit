version: '3.8'

services:
  # Aplicação principal (backend + frontend)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_BACKEND_URL=${BASE_URL:-http://localhost}
        - NEXT_PUBLIC_DISABLE_SIGNUP=${DISABLE_SIGNUP:-false}
        - NEXT_PUBLIC_CLOUD=${NEXT_PUBLIC_CLOUD:-false}
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - RUN_MIGRATIONS=true
      # Backend Environment Variables
      - CLICKHOUSE_HOST=${CLICKHOUSE_HOST:-http://clickhouse:8123}
      - CLICKHOUSE_DB=${CLICKHOUSE_DB:-analytics}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-analytics}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - BASE_URL=${BASE_URL}
      - DISABLE_SIGNUP=${DISABLE_SIGNUP:-false}
      - DISABLE_TELEMETRY=${DISABLE_TELEMETRY:-false}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      # Frontend Environment Variables
      - NEXT_PUBLIC_BACKEND_URL=${BASE_URL:-http://localhost}
      - NEXT_PUBLIC_DISABLE_SIGNUP=${DISABLE_SIGNUP:-false}
      - NEXT_PUBLIC_CLOUD=${NEXT_PUBLIC_CLOUD:-false}
    depends_on:
      - clickhouse
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ClickHouse Database
  clickhouse:
    image: clickhouse/clickhouse-server:25.4.2
    environment:
      - CLICKHOUSE_DB=${CLICKHOUSE_DB:-analytics}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER:-default}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./clickhouse_config:/etc/clickhouse-server/config.d
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:17.4
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-analytics}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  clickhouse-data:
  postgres-data:
  redis-data:
